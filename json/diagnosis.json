{
  "openapi": "3.1.0",
  "info": {
    "title": "Avey Diagnostic API",
    "description": "Use our leading symptom checker AI to provide early patient care through differential diagnosis suggestions, self-management advice, specialist recommendation, and a triage assessment of how urgent the patient's presentation is",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://api.avey.ai/ddx",
      "description": "Production"
    }
  ],
  "paths": {
    "/session": {
      "post": {
        "tags": [
          "Session management"
        ],
        "summary": "Create session",
        "description": "Starts a new interactive diagnostic session. provide the patient's initial information\n    (age, sex, and the input text of the patient) to create a session and receive the first question.\n    A unique `session_id` is returned, which you must use for all subsequent calls.",
        "operationId": "create_session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Session successfully created and first question returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing authentication token.",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Not authenticated"
                }
              }
            }
          },
          "422": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_input": {
                    "summary": "Missing input",
                    "value": {
                      "detail": "'input' must be provided."
                    }
                  },
                  "extraction_failure": {
                    "summary": "Extraction failure",
                    "value": {
                      "detail": "Could not extract any chief findings from the provided 'input'."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "example": {
                  "detail": "An unexpected internal error occurred."
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/session/{session_id}": {
      "post": {
        "tags": [
          "Session management"
        ],
        "summary": "Update session",
        "description": "Submits an answer to the previous question and retrieves the next one.\n    When the model has enough information, or if the question limit set for the session is reached, the `question` field in the response will be `null`.",
        "operationId": "update_session",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the session.",
              "examples": [
                "f47ac10b-58cc-4372-a567-0e02b2c3d479"
              ],
              "title": "Session Id"
            },
            "description": "The unique identifier for the session."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Answer processed successfully. Returns next question or null.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing authentication token.",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Not authenticated"
                }
              }
            }
          },
          "404": {
            "description": "Session not found.",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Session not found or has expired."
                }
              }
            }
          },
          "422": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "examples": {
                  "missing_input": {
                    "summary": "Missing input",
                    "value": {
                      "detail": "'input' must be provided."
                    }
                  },
                  "extraction_failure": {
                    "summary": "Extraction failure",
                    "value": {
                      "detail": "Could not extract any findings from the provided 'input'."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "example": {
                  "detail": "An unexpected internal error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/session/{session_id}/diagnose": {
      "get": {
        "tags": [
          "Session management"
        ],
        "summary": "Get diagnosis",
        "description": "Generates a clinical diagnosis and patient recommendations based on a patient's profile from an existing session.\n        Query parameters can be used to toggle:\n            * Differential Diagnosis\n            * Urgency (Triage)\n            * Specialist Recommendation\n            * Suggested Health Management Advice",
        "operationId": "diagnose",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for a completed session.",
              "examples": [
                "f47ac10b-58cc-4372-a567-0e02b2c3d479"
              ],
              "title": "Session Id"
            },
            "description": "The unique identifier for a completed session."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful clinical assessment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnoseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing authentication token.",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Not authenticated"
                }
              }
            }
          },
          "404": {
            "description": "Invalid session id",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Session not found or has expired."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "example": {
                  "detail": "An unexpected internal error occurred."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Concept": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The unique identifier of the concept in its coding system.",
            "examples": [
              "Headache",
              "Fever"
            ]
          },
          "term": {
            "type": "string",
            "title": "Term",
            "description": "The human-readable name of the concept.",
            "examples": [
              "Headache",
              "Fever"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "term"
        ],
        "title": "Concept",
        "description": "Represents a general medical concept, like a symptom or condition."
      },
      "DiagnoseResponse": {
        "properties": {
          "differential_diagnosis": {
            "items": {
              "$ref": "#/components/schemas/Disease"
            },
            "type": "array",
            "title": "Differential Diagnosis",
            "description": "A ranked list of possible conditions matching the patient's profile.",
            "examples": [
              [
                {
                  "description": "Commonly known as the common cold, this is a viral infection of your nose and throat.",
                  "id": "Common Cold",
                  "term": "Common Cold"
                },
                {
                  "description": "Commonly known as the flu, this is a contagious respiratory illness caused by influenza viruses.",
                  "id": "Influenza",
                  "term": "Influenza"
                }
              ]
            ]
          },
          "self_management": {
            "type": "string",
            "title": "Self Management",
            "description": "Advice for managing symptoms at home.",
            "examples": [
              "Stay hydrated and get plenty of rest. Over-the-counter pain relievers can help with aches."
            ]
          },
          "urgency": {
            "type": "string",
            "title": "Urgency",
            "description": "A high-level indicator of the situation's urgency",
            "examples": [
              "Home Treatable",
              "Non-Urgent, but schedule a visit with your physician",
              "Urgent, seek medical care and watch your symptoms closely",
              "Emergency, seek medical care immediately"
            ]
          },
          "specialist": {
            "type": "string",
            "title": "Specialist",
            "description": "recommended specialist for the patient to visit",
            "examples": [
              "General Practitioner"
            ]
          }
        },
        "type": "object",
        "required": [
          "differential_diagnosis",
          "self_management",
          "urgency",
          "specialist"
        ],
        "title": "DiagnoseResponse",
        "description": "Clinical diagnosis of a patient."
      },
      "Disease": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The unique identifier of the concept in its coding system.",
            "examples": [
              "Headache",
              "Fever"
            ]
          },
          "term": {
            "type": "string",
            "title": "Term",
            "description": "The human-readable name of the concept.",
            "examples": [
              "Headache",
              "Fever"
            ]
          },
          "description": {
            "title": "Description",
            "description": "A clinical description of the disease.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "term"
        ],
        "title": "Disease",
        "description": "Detailed information about a potential disease or condition in a differential diagnosis."
      },
      "Finding": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The unique identifier of the concept in its coding system.",
            "examples": [
              "Headache",
              "Fever"
            ]
          },
          "term": {
            "type": "string",
            "title": "Term",
            "description": "The human-readable name of the concept.",
            "examples": [
              "Headache",
              "Fever"
            ]
          },
          "status": {
            "$ref": "#/components/schemas/FindingStatus",
            "description": "The lowercased status of the finding as reported by the patient.",
            "examples": [
              "present",
              "absent",
              "unsure"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "term",
          "status"
        ],
        "title": "Finding",
        "description": "A medical concept with a reported status from the patient."
      },
      "FindingStatus": {
        "type": "string",
        "enum": [
          "present",
          "absent",
          "unsure"
        ],
        "title": "FindingStatus",
        "description": "The patient's reported status for a given finding or symptom."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "NewSessionRequest": {
        "properties": {
          "max_questions": {
            "type": "integer",
            "title": "Max Questions",
            "description": "Maximum number of questions per session. If left empty, the session averages 10-20 questions.",
            "default": 99
          },
          "age": {
            "type": "integer",
            "maximum": 130,
            "minimum": 0,
            "title": "Age",
            "description": "The age of the patient in years.",
            "examples": [
              34
            ]
          },
          "sex": {
            "$ref": "#/components/schemas/Sex",
            "description": "The biological sex of the patient. Possible values are 'male', 'female'."
          },
          "input": {
            "type": "string",
            "title": "Input",
            "description": "Free-text input describing the patient's symptoms.",
            "examples": [
              "My tummy hurts, and i feel like i don't want to eat anything"
            ]
          }
        },
        "type": "object",
        "required": [
          "age",
          "sex",
          "input"
        ],
        "title": "NewSessionRequest",
        "description": "Payload to create a new diagnostic session."
      },
      "PatientInfo": {
        "properties": {
          "age": {
            "type": "integer",
            "maximum": 130,
            "minimum": 0,
            "title": "Age",
            "description": "The age of the patient in years.",
            "examples": [
              34
            ]
          },
          "sex": {
            "$ref": "#/components/schemas/Sex",
            "description": "The biological sex of the patient. Possible values are 'male', 'female'."
          },
          "chief_findings": {
            "items": {
              "$ref": "#/components/schemas/Finding"
            },
            "type": "array",
            "title": "Chief Findings",
            "description": "The primary symptoms or reasons for the consultation, all of which should have a present status",
            "examples": [
              [
                {
                  "id": "Headache",
                  "status": "present",
                  "term": "Headache"
                },
                {
                  "id": "Fever",
                  "status": "present",
                  "term": "Fever"
                }
              ],
              [
                {
                  "id": "Insomnia",
                  "status": "present",
                  "term": "Insomnia"
                },
                {
                  "id": "Irritability",
                  "status": "present",
                  "term": "Irritability"
                }
              ]
            ]
          },
          "findings": {
            "items": {
              "$ref": "#/components/schemas/Finding"
            },
            "type": "array",
            "title": "Findings",
            "description": "All symptoms or findings collected during the session.",
            "examples": [
              [
                {
                  "id": "Headache",
                  "status": "present",
                  "term": "Headache"
                },
                {
                  "id": "Fever",
                  "status": "present",
                  "term": "Fever"
                },
                {
                  "id": "Nasal block",
                  "status": "absent",
                  "term": "Nasal block"
                },
                {
                  "id": "Headache (Occipital region)",
                  "status": "unsure",
                  "term": "Headache (Occipital region)"
                }
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "age",
          "sex",
          "chief_findings",
          "findings"
        ],
        "title": "PatientInfo",
        "description": "A complete snapshot of the patient's information at a point in time."
      },
      "Question": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "A unique, incrementally increasing ID for the question within the session.",
            "examples": [
              1,
              2,
              3
            ]
          },
          "media_url": {
            "title": "Media Url",
            "description": "A unique, incrementally increasing ID for the question within the session.",
            "examples": [
              1,
              2,
              3
            ],
            "oneOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ]
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The question to be displayed to the user.",
            "examples": [
              "Do you have a Lymphadenopathy?"
            ]
          },
          "description": {
            "title": "Description",
            "description": "A statement that clarifies the question to an end user",
            "examples": [
              "Lymphadenopathy is enlargement or swelling in one of your lymph nodes"
            ],
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "target_concepts": {
            "items": {
              "$ref": "#/components/schemas/Concept"
            },
            "type": "array",
            "title": "Target Concepts",
            "description": "The medical concept this question is about.",
            "examples": [
              [
                {
                  "id": "Headache (Occipital region)",
                  "term": "Headache (Occipital region)"
                },
                {
                  "id": "Headache (Occipital region)",
                  "term": "Headache (Occipital region)"
                }
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "text",
          "target_concepts"
        ],
        "title": "Question",
        "description": "A Question returned by the model."
      },
      "SessionResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "The unique identifier for the newly created session.",
            "examples": [
              "f47ac10b-58cc-4372-a567-0e02b2c3d479"
            ]
          },
          "question": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Question"
              },
              {
                "type": "null"
              }
            ]
          },
          "patient_info": {
            "$ref": "#/components/schemas/PatientInfo"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "question",
          "patient_info"
        ],
        "title": "SessionResponse",
        "description": "Response for creating a new session or updating one, containing the updated patient case and the next question for the patient.\nWhen 'question' is null, the session is over. the client should then copy the returned 'patient_info' and use it to make a final call to the defined diagnosis endpoint."
      },
      "Sex": {
        "type": "string",
        "enum": [
          "male",
          "female"
        ],
        "title": "Sex",
        "description": "Biological sex of the patient."
      },
      "UpdateSessionRequest": {
        "properties": {
          "question_id": {
            "type": "string",
            "title": "Question Id",
            "description": "The ID of the question being answered.",
            "examples": [
              1
            ]
          },
          "input": {
            "type": "string",
            "title": "Input",
            "description": "Free-text input from the user.",
            "examples": [
              "No, but i find it difficult to sleep at night"
            ]
          }
        },
        "type": "object",
        "required": [
          "question_id"
        ],
        "title": "UpdateSessionRequest",
        "description": "Payload to submit patient response and get the next question."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}